# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gravtools/gui/MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1403, 729)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.stackedWidget_Main = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget_Main.setObjectName("stackedWidget_Main")
        self.page_Observations = QtWidgets.QWidget()
        self.page_Observations.setObjectName("page_Observations")
        self.stackedWidget_Main.addWidget(self.page_Observations)
        self.page_Stations = QtWidgets.QWidget()
        self.page_Stations.setObjectName("page_Stations")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.page_Stations)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tab_Widget_Stations = QtWidgets.QTabWidget(self.page_Stations)
        self.tab_Widget_Stations.setObjectName("tab_Widget_Stations")
        self.tab_Stations_Table = QtWidgets.QWidget()
        self.tab_Stations_Table.setObjectName("tab_Stations_Table")
        self.tab_Widget_Stations.addTab(self.tab_Stations_Table, "")
        self.tab_Stations_Plot = QtWidgets.QWidget()
        self.tab_Stations_Plot.setObjectName("tab_Stations_Plot")
        self.tab_Widget_Stations.addTab(self.tab_Stations_Plot, "")
        self.verticalLayout.addWidget(self.tab_Widget_Stations)
        self.stackedWidget_Main.addWidget(self.page_Stations)
        self.horizontalLayout.addWidget(self.stackedWidget_Main)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1403, 22))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menuAdd_Survey = QtWidgets.QMenu(self.menu_File)
        self.menuAdd_Survey.setEnabled(False)
        self.menuAdd_Survey.setObjectName("menuAdd_Survey")
        self.menu_Observations = QtWidgets.QMenu(self.menubar)
        self.menu_Observations.setTearOffEnabled(False)
        self.menu_Observations.setObjectName("menu_Observations")
        self.menuEstimation_settings = QtWidgets.QMenu(self.menubar)
        self.menuEstimation_settings.setObjectName("menuEstimation_settings")
        self.menuStations = QtWidgets.QMenu(self.menubar)
        self.menuStations.setObjectName("menuStations")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setInputMethodHints(QtCore.Qt.ImhNone)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_New_Campaign = QtWidgets.QAction(MainWindow)
        self.action_New_Campaign.setObjectName("action_New_Campaign")
        self.action_Save_Campaign = QtWidgets.QAction(MainWindow)
        self.action_Save_Campaign.setEnabled(False)
        self.action_Save_Campaign.setObjectName("action_Save_Campaign")
        self.action_Load_Campaign = QtWidgets.QAction(MainWindow)
        self.action_Load_Campaign.setEnabled(False)
        self.action_Load_Campaign.setObjectName("action_Load_Campaign")
        self.action_Add_Stations = QtWidgets.QAction(MainWindow)
        self.action_Add_Stations.setEnabled(False)
        self.action_Add_Stations.setObjectName("action_Add_Stations")
        self.action_Exit = QtWidgets.QAction(MainWindow)
        self.action_Exit.setObjectName("action_Exit")
        self.action_Edit_Observations = QtWidgets.QAction(MainWindow)
        self.action_Edit_Observations.setObjectName("action_Edit_Observations")
        self.actionResiduals = QtWidgets.QAction(MainWindow)
        self.actionResiduals.setObjectName("actionResiduals")
        self.actionEstimates = QtWidgets.QAction(MainWindow)
        self.actionEstimates.setObjectName("actionEstimates")
        self.action_Corrections = QtWidgets.QAction(MainWindow)
        self.action_Corrections.setObjectName("action_Corrections")
        self.actionShow_Stations = QtWidgets.QAction(MainWindow)
        self.actionShow_Stations.setObjectName("actionShow_Stations")
        self.action_from_CG5_observation_file = QtWidgets.QAction(MainWindow)
        self.action_from_CG5_observation_file.setObjectName("action_from_CG5_observation_file")
        self.action_from_BEV_observation_file = QtWidgets.QAction(MainWindow)
        self.action_from_BEV_observation_file.setObjectName("action_from_BEV_observation_file")
        self.menuAdd_Survey.addAction(self.action_from_CG5_observation_file)
        self.menuAdd_Survey.addAction(self.action_from_BEV_observation_file)
        self.menu_File.addAction(self.action_New_Campaign)
        self.menu_File.addAction(self.action_Save_Campaign)
        self.menu_File.addAction(self.action_Load_Campaign)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.menuAdd_Survey.menuAction())
        self.menu_File.addAction(self.action_Add_Stations)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Exit)
        self.menu_Observations.addAction(self.action_Edit_Observations)
        self.menu_Observations.addSeparator()
        self.menu_Observations.addAction(self.action_Corrections)
        self.menuStations.addAction(self.actionShow_Stations)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Observations.menuAction())
        self.menubar.addAction(self.menuEstimation_settings.menuAction())
        self.menubar.addAction(self.menuStations.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget_Main.setCurrentIndex(1)
        self.tab_Widget_Stations.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GravTools"))
        self.tab_Widget_Stations.setTabText(self.tab_Widget_Stations.indexOf(self.tab_Stations_Table), _translate("MainWindow", "Table"))
        self.tab_Widget_Stations.setTabText(self.tab_Widget_Stations.indexOf(self.tab_Stations_Plot), _translate("MainWindow", "Plot"))
        self.menu_File.setTitle(_translate("MainWindow", "File"))
        self.menuAdd_Survey.setTitle(_translate("MainWindow", "Add Survey"))
        self.menu_Observations.setTitle(_translate("MainWindow", "Observations"))
        self.menuEstimation_settings.setTitle(_translate("MainWindow", "Estimation settings"))
        self.menuStations.setTitle(_translate("MainWindow", "Stations"))
        self.action_New_Campaign.setText(_translate("MainWindow", "&New Campaign"))
        self.action_Save_Campaign.setText(_translate("MainWindow", "&Save Campaign"))
        self.action_Load_Campaign.setText(_translate("MainWindow", "&Load Campaign"))
        self.action_Add_Stations.setText(_translate("MainWindow", "Add Stations"))
        self.action_Exit.setText(_translate("MainWindow", "E&xit"))
        self.action_Exit.setToolTip(_translate("MainWindow", "Exit GravTools"))
        self.action_Edit_Observations.setText(_translate("MainWindow", "Edit Observations"))
        self.actionResiduals.setText(_translate("MainWindow", "Residuals"))
        self.actionEstimates.setText(_translate("MainWindow", "Estimates"))
        self.action_Corrections.setText(_translate("MainWindow", "Corrections"))
        self.actionShow_Stations.setText(_translate("MainWindow", "Show Stations"))
        self.action_from_CG5_observation_file.setText(_translate("MainWindow", "from CG5 observation file"))
        self.action_from_BEV_observation_file.setText(_translate("MainWindow", "from BEV observation file"))
